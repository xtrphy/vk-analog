// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String    @id @default(cuid())
    githubId       String?   @unique
    username       String    @unique
    email          String?   @unique
    profilePicture String?
    bio            String?
    createdAt      DateTime  @default(now())
    posts          Post[]
    comments       Comment[]
    likes          Like[]
    followers      Follow[]  @relation("Followee")
    following      Follow[]  @relation("Follower")
}

model Post {
    id        String    @id @default(cuid())
    content   String
    imageUrl  String?
    createdAt DateTime  @default(now())
    author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId  String
    comments  Comment[]
    likes     Like[]
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    createdAt DateTime @default(now())
    author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId  String
    post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId    String
}

model Like {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String
    post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId    String
    createdAt DateTime @default(now())

    @@unique([userId, postId])
}

model Follow {
    id         String   @id @default(cuid())
    follower   User     @relation("Follower", fields: [followerId], references: [id])
    followerId String
    followee   User     @relation("Followee", fields: [followeeId], references: [id])
    followeeId String
    createdAt  DateTime @default(now())

    @@unique([followerId, followeeId], name: "followerId_followeeId")
}
